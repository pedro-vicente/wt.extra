#include <Wt/WApplication.h>
#include <Wt/WContainerWidget.h>
#include <vector>
#include <string>
#include "WMapbox.hh"
#include "parser.hh"
#include "map.hh"

csv_parser* parser = nullptr;
std::string geojson_wards;

int load_dc311_simple();
int load_dc311_full();

/////////////////////////////////////////////////////////////////////////////////////////////////////
// ApplicationMap
/////////////////////////////////////////////////////////////////////////////////////////////////////

class ApplicationMap : public Wt::WApplication
{
public:
  ApplicationMap(const Wt::WEnvironment& env);
  virtual ~ApplicationMap();

private:
  Wt::WMapbox* map;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////
// ApplicationMap
/////////////////////////////////////////////////////////////////////////////////////////////////////

ApplicationMap::ApplicationMap(const Wt::WEnvironment& env)
  : WApplication(env), map(nullptr)
{
  setTitle("DC 311 Service Requests Map");

  map = root()->addWidget(std::make_unique<Wt::WMapbox>());
  map->resize(1920, 1080);
 
  if (!geojson_wards.empty())
  {
    map->geojson = geojson_wards;
  }

  if (parser && !parser->coordinates.empty())
  {
    map->coordinates = parser->coordinates;
  }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
// ~ApplicationMap
/////////////////////////////////////////////////////////////////////////////////////////////////////

ApplicationMap::~ApplicationMap()
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
// create_application
/////////////////////////////////////////////////////////////////////////////////////////////////////

std::unique_ptr<Wt::WApplication> create_application(const Wt::WEnvironment& env)
{
  return std::make_unique<ApplicationMap>(env);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
// main
/////////////////////////////////////////////////////////////////////////////////////////////////////

int main(int argc, char* argv[])
{
  geojson_wards = load_geojson("ward-2012.geojson");
  if (load_dc311_simple() < 0)
  { 
  }

  int result = Wt::WRun(argc, argv, &create_application);

  delete parser;
  parser = nullptr;
  return result;
}
